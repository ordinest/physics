{"version":3,"sources":["Components/Positioned/index.js","Utilities/spectralUtilities.js","Components/Workbench/Screen.js","index.js","Components/Workbench/Source.js","Components/Workbench/Grate.js","Components/Workbench/Rays.js","Components/Workbench/index.js","App.js"],"names":["Positioned","props","coordinates","x","y","style","position","left","top","transform","children","wavelengthToColor","wavelength","R","G","B","alpha","diffractionHeight","d","lambda","a","Math","sqrt","Component","Screen","screenDistance","gratingSpacing","height","lines","map","line","color","width","border","borderLeft","borderRight","boxSizing","background","SpectralLine","display","flexDirection","alignItems","gap","margin","fontSize","round","i","Fragment","key","Source","glow","className","borderRadius","borderColor","boxShadow","Grate","Rays","sourceCoordinates","screenCoordinates","screenHeight","gratePosition","diffractionSpacing","stroke","strokeDasharray","sourceRayStyle","diffractedRaysStyle","right","x1","y1","x2","y2","dline","Workbench","useState","elements","hydrogen","active","setActive","spacing","setSpacing","setScreenDistance","grateX","padding","htmlFor","id","defaultValue","onChange","e","target","value","Object","keys","element","name","type","min","max","step","minHeight","sourceColor","sourceBorder","sourceGlow","App","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.71d307df.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Positioned = props => {\r\n    let {\r\n        coordinates = { x: 0, y: 0 },\r\n    } = props\r\n    \r\n    return(\r\n        <div style={{\r\n            position: 'absolute',\r\n            left: `${coordinates.x}%`,\r\n            top: `${coordinates.y}%`,\r\n            transform: 'translateY(-50%) translateX(-50%)',\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Positioned","export function wavelengthToColor(wavelength) {\r\n    var R,\r\n        G,\r\n        B,\r\n        alpha,\r\n        colorSpace,\r\n        wl = wavelength\r\n  \r\n  \r\n    if (wl >= 380 && wl < 440) {\r\n        R = -1 * (wl - 440) / (440 - 380);\r\n        G = 0;\r\n        B = 1;\r\n   } else if (wl >= 440 && wl < 490) {\r\n       R = 0;\r\n       G = (wl - 440) / (490 - 440);\r\n       B = 1;  \r\n    } else if (wl >= 490 && wl < 510) {\r\n        R = 0;\r\n        G = 1;\r\n        B = -1 * (wl - 510) / (510 - 490);\r\n    } else if (wl >= 510 && wl < 580) {\r\n        R = (wl - 510) / (580 - 510);\r\n        G = 1;\r\n        B = 0;\r\n    } else if (wl >= 580 && wl < 645) {\r\n        R = 1;\r\n        G = -1 * (wl - 645) / (645 - 580);\r\n        B = 0.0;\r\n    } else if (wl >= 645 && wl <= 780) {\r\n        R = 1;\r\n        G = 0;\r\n        B = 0;\r\n    } else {\r\n        R = 0;\r\n        G = 0;\r\n        B = 0;\r\n    }\r\n  \r\n    // intensty is lower at the edges of the visible spectrum.\r\n    if (wl > 780 || wl < 380) {\r\n        alpha = 0;\r\n    } else if (wl > 700) {\r\n        alpha = (780 - wl) / (780 - 700);\r\n    } else if (wl < 420) {\r\n        alpha = (wl - 380) / (420 - 380);\r\n    } else {\r\n        alpha = 1;\r\n    }\r\n  \r\n    colorSpace = [\"rgba(\" + (R * 100) + \"%,\" + (G * 100) + \"%,\" + (B * 100) + \"%, \" + alpha + \")\", R, G, B, alpha]\r\n  \r\n    // colorSpace is an array with 5 elements.\r\n    // The first element is the complete code as a string.  \r\n    // Use colorSpace[0] as is to display the desired color.  \r\n    // use the last four elements alone or together to access each of the individual r, g, b and a channels.  \r\n  \r\n    return colorSpace;\r\n  \r\n}\r\n  \r\n/**\r\n * Calculate the height of spectral lines from incoming ray\r\n * as they would appear on a screen.\r\n * @param {Number} d Distance from diffraction grating to screen.\r\n * @param {Number} lambda Wavelength.\r\n * @param {Number} a Distance between diffraction grating slits.\r\n */\r\nexport function diffractionHeight(d, lambda, a) {\r\n    return d * lambda / Math.sqrt(a * a - lambda * lambda)\r\n}","import React from 'react'\r\nimport Positioned from 'Components/Positioned'\r\nimport { wavelengthToColor, diffractionHeight } from 'Utilities/spectralUtilities'\r\n\r\n\r\nconst Screen = props => {\r\n    const { screenDistance, gratingSpacing, coordinates, height } = props\r\n    const lines = props.lines.map(line => ({\r\n        wavelength: line,\r\n        height: diffractionHeight(screenDistance, line, gratingSpacing),\r\n        color: wavelengthToColor(line)[0],\r\n    }))\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        height: `${height}`,\r\n        width: '120px',\r\n        transform: 'translateY(-50%)',\r\n        border: 'none',\r\n        borderLeft: '1px solid white',\r\n        borderRight: '1px solid white',\r\n        boxSizing: 'border-box',\r\n        background: 'black',\r\n    }\r\n\r\n    const SpectralLine = ({ color, height }) => {\r\n        return (\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: '50%',\r\n                width: '200px',\r\n                transform: `translateY(${-(height + 1)}px)`,\r\n                height: '2px',\r\n                display: \"flex\",\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                gap: '4px',\r\n            }}>\r\n                <div style={{\r\n                    width: '112px',\r\n                    height: '2px',\r\n                    margin: '0 4px',\r\n                    background: color,\r\n                }} />\r\n                <div style={{\r\n                    color: \"white\",\r\n                    fontSize: '0.825rem'\r\n                }}>{Math.round(height)}mm</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Positioned coordinates={coordinates}>\r\n            <div style={{display:'flex',flexDirection:'row'}}>\r\n                <div style={style}>\r\n                    <SpectralLine color='white' height={0}/>\r\n                    {lines.map((line, i) => (\r\n                        <React.Fragment key={i}>\r\n                            <SpectralLine color={line.color} height={line.height} />                        \r\n                            <SpectralLine color={line.color} height={-line.height} />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Positioned>\r\n    )\r\n}\r\n\r\nexport default Screen","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nconst root = document.getElementById('root')\r\nconst renderApp = Component => {\r\n  ReactDOM.render(\r\n    <Component />,\r\n    root\r\n  )\r\n}\r\n\r\nrenderApp(App)","import React from 'react'\r\nimport Positioned from 'Components/Positioned'\r\n\r\nconst Source = ({\r\n    coordinates,\r\n    color,\r\n    border,\r\n    glow,\r\n}) => {\r\n    return (\r\n        <Positioned coordinates={coordinates}>\r\n            <div\r\n                className='source'\r\n                style={{\r\n                    height: '14px',\r\n                    width: '14px',\r\n                    borderRadius: '50%',\r\n                    background: `${color}`,\r\n                    borderColor: `${border}`,\r\n                    boxShadow: `${glow} 0 0 12px 12px`,\r\n                }}\r\n            />\r\n        </Positioned>\r\n    )\r\n}\r\n\r\nexport default Source","import React from 'react'\r\nimport Positioned from 'Components/Positioned'\r\n\r\nconst Grate = ({\r\n    coordinates = { x: 0, y: 0 },\r\n}) => {\r\n    return (\r\n        <Positioned coordinates={coordinates}>\r\n            <div\r\n                className='grate'\r\n                style={{\r\n                    width: '4px',\r\n                    height: '400px',\r\n                    background: 'gray',\r\n                }}\r\n            />\r\n        </Positioned>\r\n    )\r\n}\r\n\r\nexport default Grate","import React from 'react'\r\nimport { wavelengthToColor, diffractionHeight } from 'Utilities/spectralUtilities'\r\n\r\nconst Rays = props => {\r\n    const {\r\n        coordinates,\r\n        sourceCoordinates,\r\n        screenCoordinates,\r\n        screenHeight,\r\n        screenDistance,\r\n        gratePosition,\r\n        diffractionSpacing,\r\n    } = props\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: `${coordinates.x}%`,\r\n        transform: 'translateY(-50%)',\r\n        width: '100%',\r\n        height: `${screenHeight}px`,\r\n        stroke: 'white',\r\n        strokeDasharray: '4px',\r\n    }\r\n    const sourceRayStyle = {\r\n        position: 'absolute',\r\n        left: `${sourceCoordinates.x}%`,\r\n        width: `${gratePosition - sourceCoordinates.x}%`,\r\n        height: '100%',\r\n    }\r\n    const diffractedRaysStyle = {\r\n        position: 'absolute',\r\n        right: `${100 - screenCoordinates.x}%`,\r\n        width: `${screenCoordinates.x - gratePosition}%`,\r\n        height: '100%',\r\n    }\r\n    \r\n    return (\r\n        <div style={style}>\r\n            <svg style={sourceRayStyle}>\r\n                <line x1=\"0\" y1=\"50%\" x2='100%' y2=\"50%\" />\r\n            </svg>\r\n            <svg style={diffractedRaysStyle}>\r\n                <line x1=\"100%\" y1=\"50%\" x2=\"0\" y2=\"50%\" />\r\n                {props.lines.map(dline => (\r\n                    <React.Fragment key={dline}>\r\n                        <line\r\n                            x1=\"100%\"\r\n                            y1={`${(screenHeight / 2 - diffractionHeight(screenDistance, dline, diffractionSpacing)) / screenHeight * 100}%`}\r\n                            x2=\"0\"\r\n                            y2=\"50%\"\r\n                            style={{ stroke: wavelengthToColor(dline)[0] }}\r\n                        />\r\n                        <line\r\n                            x1=\"100%\"\r\n                            y1={`${100 - (screenHeight / 2 - diffractionHeight(screenDistance, dline, diffractionSpacing)) / screenHeight * 100}%`}\r\n                            x2=\"0\"\r\n                            y2=\"50%\"\r\n                            style={{ stroke: wavelengthToColor(dline)[0] }}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rays","import React, { useState } from 'react'\r\nimport './workbench.scss'\r\nimport elements from 'Data/elements'\r\nimport Screen from './Screen'\r\nimport Source from './Source'\r\nimport Grate from './Grate'\r\nimport Rays from './Rays'\r\n\r\n\r\nconst Workbench = () => {\r\n    const [active, setActive] = useState(elements.hydrogen)\r\n    const [spacing, setSpacing] = useState(1660)\r\n    const [screenDistance, setScreenDistance] = useState(400)\r\n\r\n    const toolbarPadding = 2    // 2px\r\n    const toolbarHeight = 2.5   // 2.5rem\r\n    const screenHeight = 600    // In pixels\r\n    const grateMin = 200        // In millimeters\r\n    const grateMax = 450        // In millimeters\r\n    const spacingMin = 1220     // In nanometers\r\n    const spacingMax = 1820     // In nanometers\r\n\r\n    const grateX = 60 - 20 * (screenDistance - grateMin) / (grateMax-grateMin)\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='toolbar' style={{ height: `${toolbarHeight}rem`, padding: `${toolbarPadding}px` }}>\r\n                <div className='item'>\r\n                    <label htmlFor='source'><span>Source</span></label>\r\n                    <select id='source' defaultValue={active} onChange={e => setActive(elements[e.target.value])}>\r\n                        {Object.keys(elements).map(element => (\r\n                            <option value={element} key={element}>\r\n                                {elements[element].name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className='item'>\r\n                    <label htmlFor='distance'>\r\n                        <span>\r\n                            {`Screen Distance (${screenDistance} mm)`}\r\n                        </span>\r\n                    </label>\r\n                    <input\r\n                        type='range'\r\n                        id='distance'\r\n                        min={grateMin}\r\n                        max={grateMax}\r\n                        step=\"1\"\r\n                        defaultValue={screenDistance}\r\n                        onChange={e => setScreenDistance(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='item'>\r\n                    <label htmlFor='spacing'><span>{`Slit Spacing (${spacing} nm)`}</span></label>\r\n                    <input\r\n                        type='range'\r\n                        id='spacing'\r\n                        min={spacingMin}\r\n                        max={spacingMax}\r\n                        step=\"1\"\r\n                        defaultValue={spacing}\r\n                        onChange={e => setSpacing(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='workbench' style={{ minHeight: screenHeight }}>\r\n                <div className='scaling'>\r\n                    <Source\r\n                        coordinates={{ x: 10, y: 50 }}\r\n                        color={active.sourceColor}\r\n                        border={active.sourceBorder}\r\n                        glow={active.sourceGlow}\r\n                    />\r\n                    <Grate\r\n                        coordinates={{ x: grateX, y: 50 }}\r\n                    />\r\n                    <Screen\r\n                        coordinates={{ x: 82, y: 50 }}\r\n                        height={`${screenHeight}px`}\r\n                        sourceColor={active.sourceColor}\r\n                        screenDistance={screenDistance}\r\n                        gratingSpacing={spacing}\r\n                        lines={active.lines}\r\n                    />\r\n                    <Rays\r\n                        sourceCoordinates={{ x: 10, y: 50 }}\r\n                        screenCoordinates={{ x: 82, y: 50 }}\r\n                        screenHeight={screenHeight}\r\n                        screenDistance={screenDistance}\r\n                        diffractionSpacing={spacing}\r\n                        coordinates={{ x: 50, y: 50 }}\r\n                        gratePosition={grateX}\r\n                        lines={active.lines}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workbench","import React from 'react';\r\nimport Workbench from 'Components/Workbench'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Workbench />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}