{"version":3,"sources":["Components/Toolbar/index.js","Utilities/spectralUtilities.js","Components/Workbench/Screen.js","index.js","Components/Positioned/index.js","Components/Workbench/Source.js","Components/Workbench/Grate.js","Components/Workbench/Rays.js","Components/Workbench/index.js","Components/SpectralLab/index.js","App.js"],"names":["Toolbar","sources","height","onChangeSource","gratings","onChangeGrating","currentScreenDistance","minScreenDistance","maxScreenDistance","onChangeScreenDistance","classes","createUseStyles","toolbarStyle","padding","color","background","zIndex","itemStyle","display","flexDirection","gap","labelStyle","fontWeight","selectStyle","useStyles","className","onSubmit","e","preventDefault","style","flexFlow","justifyContent","alignItems","width","htmlFor","id","onChange","target","value","Object","keys","map","source","key","name","grating","type","min","max","step","defaultValue","wavelengthToColor","wavelength","R","G","B","alpha","diffractionHeight","d","lambda","a","Math","sqrt","Component","Screen","props","screenDistance","gratingSpacing","coordinates","lines","line","position","border","SpectralLine","top","transform","margin","fontSize","round","left","x","y","borderLeft","borderRight","boxSizing","i","Fragment","Positioned","children","Source","glow","borderRadius","borderColor","boxShadow","Grate","Rays","sourceCoordinates","screenCoordinates","screenHeight","gratePosition","diffractionSpacing","stroke","strokeDasharray","sourceRayStyle","diffractedRaysStyle","right","x1","y1","x2","y2","dline","Workbench","grateX","overflow","sourceColor","sourceBorder","sourceGlow","period","SpectralLab","useState","hydrogen","setSource","setGrating","setScreenDistance","screenRange","newSource","currentGrating","newGrating","newDistance","window","innerHeight","App","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e33692a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { createUseStyles } from 'react-jss'\r\n\r\n/**\r\n * Toolbar component for the Spectral Identification lab.\r\n * @param {Object} sources Object with entries for each source.\r\n * @param {Object} currentSource Object of the currently active source.\r\n * @param {Function} onChangeSource Callback when source selection changes.\r\n * @param {Number} currentScreenDistance Number for the current screen distance.\r\n * @param {Function} onChangeScreenDistance Callback when screen distance changes.\r\n * @param {Object} gratings Object with entries for each grating configuration.\r\n * @param {Function} onChangegrating Callback when grating selection changes.\r\n */\r\nconst Toolbar = ({\r\n    sources = {},\r\n    height = '2.5rem',\r\n    onChangeSource,\r\n    gratings = {},\r\n    onChangeGrating,\r\n    currentScreenDistance,\r\n    minScreenDistance,\r\n    maxScreenDistance,\r\n    onChangeScreenDistance,\r\n}) => {\r\n    // Create styles for toolbar components\r\n    const useStyles = createUseStyles({\r\n        toolbarStyle: {\r\n            height: `${height}`,\r\n            padding: `2px`,\r\n            color: 'white',\r\n            background: 'black',\r\n            zIndex: '100',\r\n        },\r\n        itemStyle: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: '0.25rem',\r\n        },\r\n        labelStyle: {\r\n            fontWeight: 'bold',\r\n        },\r\n        selectStyle: {\r\n            background: 'black',\r\n            color: 'white',\r\n        }\r\n    })\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.toolbarStyle}>\r\n            <form onSubmit={e => e.preventDefault()} style={{\r\n                display: 'flex',\r\n                flexFlow: 'row',\r\n                gap: '2rem',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                width: '100%',\r\n            }}>\r\n                <div className={classes.itemStyle}>\r\n                    <label htmlFor='source' className={classes.labelStyle}>\r\n                        <span>Source</span>\r\n                    </label>\r\n                    <select\r\n                        className={classes.selectStyle}\r\n                        id='source'\r\n                        onChange={e => onChangeSource(sources[e.target.value])} \r\n                    >\r\n                        {Object.keys(sources).map(source => (\r\n                            <option value={source} key={source}>\r\n                                {sources[source].name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.itemStyle}>\r\n                    <label htmlFor='grating' className={classes.labelStyle}>\r\n                        <span>Grating</span>\r\n                    </label>\r\n                    <select\r\n                        className={classes.selectStyle}\r\n                        id='grating'\r\n                        onChange={e => onChangeGrating(gratings[e.target.value])}\r\n                    >\r\n                        {Object.keys(gratings).map(grating => (\r\n                            <option value={grating} key={grating}>\r\n                                {gratings[grating].name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.itemStyle}>\r\n                    <label htmlFor='distance' className={classes.labelStyle}>\r\n                        <span>Screen Distance ({currentScreenDistance} mm)</span>\r\n                    </label>\r\n                    <input\r\n                        type='range'\r\n                        id='distance'\r\n                        min={minScreenDistance}\r\n                        max={maxScreenDistance}\r\n                        step='1'\r\n                        defaultValue={currentScreenDistance}\r\n                        onChange={e => onChangeScreenDistance(e.target.value)}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar","export function wavelengthToColor(wavelength) {\r\n    var R,\r\n        G,\r\n        B,\r\n        alpha,\r\n        colorSpace,\r\n        wl = wavelength\r\n  \r\n  \r\n    if (wl >= 380 && wl < 440) {\r\n        R = -1 * (wl - 440) / (440 - 380);\r\n        G = 0;\r\n        B = 1;\r\n   } else if (wl >= 440 && wl < 490) {\r\n       R = 0;\r\n       G = (wl - 440) / (490 - 440);\r\n       B = 1;  \r\n    } else if (wl >= 490 && wl < 510) {\r\n        R = 0;\r\n        G = 1;\r\n        B = -1 * (wl - 510) / (510 - 490);\r\n    } else if (wl >= 510 && wl < 580) {\r\n        R = (wl - 510) / (580 - 510);\r\n        G = 1;\r\n        B = 0;\r\n    } else if (wl >= 580 && wl < 645) {\r\n        R = 1;\r\n        G = -1 * (wl - 645) / (645 - 580);\r\n        B = 0.0;\r\n    } else if (wl >= 645 && wl <= 780) {\r\n        R = 1;\r\n        G = 0;\r\n        B = 0;\r\n    } else {\r\n        R = 0;\r\n        G = 0;\r\n        B = 0;\r\n    }\r\n  \r\n    // intensty is lower at the edges of the visible spectrum.\r\n    if (wl > 780 || wl < 380) {\r\n        alpha = 0;\r\n    } else if (wl > 700) {\r\n        alpha = (780 - wl) / (780 - 700);\r\n    } else if (wl < 420) {\r\n        alpha = (wl - 380) / (420 - 380);\r\n    } else {\r\n        alpha = 1;\r\n    }\r\n  \r\n    colorSpace = [\"rgba(\" + (R * 100) + \"%,\" + (G * 100) + \"%,\" + (B * 100) + \"%, \" + alpha + \")\", R, G, B, alpha]\r\n  \r\n    // colorSpace is an array with 5 elements.\r\n    // The first element is the complete code as a string.  \r\n    // Use colorSpace[0] as is to display the desired color.  \r\n    // use the last four elements alone or together to access each of the individual r, g, b and a channels.  \r\n  \r\n    return colorSpace;\r\n  \r\n}\r\n  \r\n/**\r\n * Calculate the height of spectral lines from incoming ray\r\n * as they would appear on a screen.\r\n * @param {Number} d Distance from diffraction grating to screen.\r\n * @param {Number} lambda Wavelength.\r\n * @param {Number} a Distance between diffraction grating slits.\r\n */\r\nexport function diffractionHeight(d, lambda, a) {\r\n    return d * lambda / Math.sqrt(a * a - lambda * lambda)\r\n}","import React from 'react'\r\nimport { wavelengthToColor, diffractionHeight } from 'Utilities/spectralUtilities'\r\n\r\n\r\nconst Screen = props => {\r\n    const { screenDistance, gratingSpacing, coordinates, height, width } = props\r\n    const lines = props.lines.map(line => ({\r\n        wavelength: line,\r\n        height: diffractionHeight(screenDistance, line, gratingSpacing),\r\n        color: wavelengthToColor(line)[0],\r\n    }))\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        height: `${height}`,\r\n        width: '100%',\r\n        border: 'none',\r\n        background: 'black',\r\n    }\r\n    const borders = {\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '54%',\r\n        left: 0,\r\n        top: 0,\r\n        borderLeft: '1px solid white',\r\n        borderRight: '1px solid white',\r\n        boxSizing: 'border-box',\r\n    }\r\n\r\n    const SpectralLine = ({ color, height }) => {\r\n        return (\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: '50%',\r\n                width: '100%',\r\n                transform: `translateY(${-(height + 1)}px)`,\r\n                height: '2px',\r\n                display: \"flex\",\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                gap: '4px',\r\n            }}>\r\n                <div style={{\r\n                    width: '50%',\r\n                    height: '2px',\r\n                    margin: '0 2%',\r\n                    background: color,\r\n                }}\r\n                />\r\n                <div style={{\r\n                    color: \"white\",\r\n                    fontSize: '0.825rem',\r\n                }}>{Math.round(height)}mm</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            position: 'absolute',   \r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            width: `${width}%`,\r\n            height: `100%`,\r\n            left: `${coordinates.x}%`,\r\n            top: `${coordinates.y}%`,\r\n            transform: 'translateY(-50%)'\r\n        }}>\r\n            <div style={style}>\r\n                <div style={borders}/>\r\n                <SpectralLine color='white' height={0}/>\r\n                {lines.map((line, i) => (\r\n                    <React.Fragment key={i}>\r\n                        <SpectralLine\r\n                            color={line.color}\r\n                            height={line.height}\r\n                        />                        \r\n                        <SpectralLine\r\n                            color={line.color}\r\n                            height={-line.height}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Screen","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nconst root = document.getElementById('root')\r\nconst renderApp = Component => {\r\n  ReactDOM.render(\r\n    <Component />,\r\n    root\r\n  )\r\n}\r\n\r\nrenderApp(App)","import React from 'react'\r\n\r\nconst Positioned = props => {\r\n    let {\r\n        coordinates = { x: 0, y: 0 },\r\n    } = props\r\n    \r\n    return(\r\n        <div style={{\r\n            position: 'absolute',\r\n            left: `${coordinates.x}%`,\r\n            top: `${coordinates.y}%`,\r\n            transform: 'translateY(-50%) translateX(-50%)',\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Positioned","import React from 'react'\r\nimport Positioned from 'Components/Positioned'\r\n\r\nconst Source = ({\r\n    coordinates,\r\n    color,\r\n    border,\r\n    glow,\r\n}) => {\r\n    return (\r\n        <Positioned coordinates={coordinates}>\r\n            <div\r\n                className='source'\r\n                style={{\r\n                    height: '14px',\r\n                    width: '14px',\r\n                    borderRadius: '50%',\r\n                    background: `${color}`,\r\n                    borderColor: `${border}`,\r\n                    boxShadow: `${glow} 0 0 12px 12px`,\r\n                }}\r\n            />\r\n        </Positioned>\r\n    )\r\n}\r\n\r\nexport default Source","import React from 'react'\r\nimport Positioned from 'Components/Positioned'\r\n\r\nconst Grate = ({\r\n    coordinates = { x: 0, y: 0 },\r\n}) => {\r\n    return (\r\n        <Positioned coordinates={coordinates}>\r\n            <div\r\n                className='grate'\r\n                style={{\r\n                    width: '4px',\r\n                    height: '400px',\r\n                    background: 'gray',\r\n                }}\r\n            />\r\n        </Positioned>\r\n    )\r\n}\r\n\r\nexport default Grate","import React from 'react'\r\nimport { wavelengthToColor, diffractionHeight } from 'Utilities/spectralUtilities'\r\n\r\nconst Rays = props => {\r\n    const {\r\n        coordinates,\r\n        sourceCoordinates,\r\n        screenCoordinates,\r\n        screenHeight,\r\n        screenDistance,\r\n        gratePosition,\r\n        diffractionSpacing,\r\n    } = props\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: `${coordinates.x}%`,\r\n        transform: 'translateY(-50%)',\r\n        width: '100%',\r\n        height: `${screenHeight}px`,\r\n        stroke: 'white',\r\n        strokeDasharray: '4px',\r\n    }\r\n    const sourceRayStyle = {\r\n        position: 'absolute',\r\n        left: `${sourceCoordinates.x}%`,\r\n        width: `${gratePosition - sourceCoordinates.x}%`,\r\n        height: '100%',\r\n    }\r\n    const diffractedRaysStyle = {\r\n        position: 'absolute',\r\n        right: `${100 - screenCoordinates.x}%`,\r\n        width: `${screenCoordinates.x - gratePosition}%`,\r\n        height: '100%',\r\n    }\r\n    \r\n    return (\r\n        <div style={style}>\r\n            <svg style={sourceRayStyle}>\r\n                <line x1=\"0\" y1=\"50%\" x2='100%' y2=\"50%\" />\r\n            </svg>\r\n            <svg style={diffractedRaysStyle}>\r\n                <line x1=\"100%\" y1=\"50%\" x2=\"0\" y2=\"50%\" />\r\n                {props.lines.map(dline => (\r\n                    <React.Fragment key={dline}>\r\n                        <line\r\n                            x1=\"100%\"\r\n                            y1={`${(screenHeight / 2 - diffractionHeight(screenDistance, dline, diffractionSpacing)) / screenHeight * 100}%`}\r\n                            x2=\"0\"\r\n                            y2=\"50%\"\r\n                            style={{ stroke: wavelengthToColor(dline)[0] }}\r\n                        />\r\n                        <line\r\n                            x1=\"100%\"\r\n                            y1={`${100 - (screenHeight / 2 - diffractionHeight(screenDistance, dline, diffractionSpacing)) / screenHeight * 100}%`}\r\n                            x2=\"0\"\r\n                            y2=\"50%\"\r\n                            style={{ stroke: wavelengthToColor(dline)[0] }}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rays","import React from 'react'\r\nimport './workbench.scss'\r\nimport Screen from './Screen'\r\nimport Source from './Source'\r\nimport Grate from './Grate'\r\nimport Rays from './Rays'\r\n\r\n\r\nconst Workbench = ({\r\n    source,\r\n    height,\r\n    grating,\r\n    screenDistance,\r\n    minScreenDistance,\r\n    maxScreenDistance,\r\n}) => {\r\n    const screenHeight = height    // In pixels\r\n\r\n    const grateX = 60 - 20 * (screenDistance - minScreenDistance) / (maxScreenDistance - minScreenDistance)\r\n    const style = {\r\n        position: 'absolute',\r\n        height: `${height}px`,\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n    }\r\n\r\n    return (\r\n        <div className='workbench' style={style}>\r\n            <Source\r\n                coordinates={{ x: 10, y: 50 }}\r\n                color={source.sourceColor}\r\n                border={source.sourceBorder}\r\n                glow={source.sourceGlow}\r\n            />\r\n            <Grate\r\n                coordinates={{ x: grateX, y: 50 }}\r\n            />\r\n            <Screen\r\n                coordinates={{ x: 85, y: 50 }}\r\n                height={`${screenHeight}px`}\r\n                width={15}\r\n                sourceColor={source.sourceColor}\r\n                screenDistance={screenDistance}\r\n                gratingSpacing={grating.period}\r\n                lines={source.lines}\r\n            />\r\n            <Rays\r\n                sourceCoordinates={{ x: 10, y: 50 }}\r\n                screenCoordinates={{ x: 85, y: 50 }}\r\n                screenHeight={screenHeight}\r\n                screenDistance={screenDistance}\r\n                diffractionSpacing={grating.period}\r\n                coordinates={{ x: 50, y: 50 }}\r\n                gratePosition={grateX}\r\n                lines={source.lines}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workbench","import React, { useState } from 'react'\r\nimport Toolbar from 'Components/Toolbar'\r\nimport Workbench from 'Components/Workbench'\r\nimport sources from 'Data/sources.json'\r\nimport gratings from 'Data/gratings.json'\r\n\r\nconst SpectralLab = () => {\r\n    const [source, setSource] = useState(sources.hydrogen)\r\n    const [grating, setGrating] = useState(gratings[0])\r\n    const [screenDistance, setScreenDistance] = useState(400)   // Represents millimeters\r\n    const screenRange = [200, 800]      // Min and max values for screen distance\r\n    const toolbarHeight = '40'         // In pixels\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar\r\n                sources={sources}\r\n                height={`${toolbarHeight}px`}\r\n                onChangeSource={newSource => setSource(newSource)}\r\n                gratings={gratings}\r\n                currentGrating={grating}\r\n                onChangeGrating={newGrating => setGrating(newGrating)}\r\n                currentScreenDistance={screenDistance}\r\n                minScreenDistance={screenRange[0]}\r\n                maxScreenDistance={screenRange[1]}\r\n                onChangeScreenDistance={newDistance => setScreenDistance(newDistance)}\r\n            />\r\n            <Workbench\r\n                source={source}\r\n                height={`${window.innerHeight - toolbarHeight - 16}`}\r\n                grating={grating}\r\n                screenDistance={screenDistance}\r\n                minScreenDistance={screenRange[0]}\r\n                maxScreenDistance={screenRange[1]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpectralLab","import React from 'react';\r\nimport SpectralLab from 'Components/SpectralLab'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <SpectralLab />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}